package main

import (
	"encoding/xml"
	"fmt"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestGetLines(t *testing.T) {
	c := Coverage{}

	data := `
	  <?xml version="1.0" ?>
	  <coverage branch-rate="0" line-rate="0.7333" timestamp="1481706398484" version="4.2">
	  <!-- Generated by coverage.py: https://coverage.readthedocs.io -->
	  <!-- Based on https://raw.githubusercontent.com/cobertura/web/f0366e5e2cf18f111cbd61fc34ef720a6584ba02/htdocs/xml/coverage-03.dtd -->
	  <sources>
	    <source>/Users/ckniep/src/github.com/qnib/tcollector-docker</source>
	    <source>/Users/ckniep/src/github.com/qnib/tcollector-docker/src/collectors/0/docker_engine.py</source>
		</sources>
		<packages>
		  <package branch-rate="0" complexity="0" line-rate="0.7333" name="src.collectors.0">
		    <classes>
		      <class branch-rate="0" complexity="0" filename="src/collectors/0/docker_engine.py" line-rate="0.7333" name="docker_engine.py">
		        <methods/>
		        <lines>
		          <line hits="1" number="2"/>
		          <line hits="1" number="4"/>
		          <line hits="1" number="5"/>
		          <line hits="1" number="6"/>
		          <line hits="1" number="7"/>
		          <line hits="1" number="9"/>
		          <line hits="1" number="11"/>
		          <line hits="1" number="12"/>
		          <line hits="1" number="13"/>
		          <line hits="1" number="16"/>
		          <line hits="1" number="17"/>
		          <line hits="1" number="18"/>
		          <line hits="1" number="19"/>
		          <line hits="1" number="20"/>
		          <line hits="1" number="21"/>
		          <line hits="1" number="22"/>
		          <line hits="1" number="24"/>
		          <line hits="1" number="25"/>
		          <line hits="1" number="27"/>
		          <line hits="1" number="28"/>
		          <line hits="1" number="30"/>
		          <line hits="1" number="34"/>
		          <line hits="1" number="35"/>
		          <line hits="1" number="37"/>
		          <line hits="1" number="38"/>
		          <line hits="1" number="39"/>
		          <line hits="1" number="45"/>
		          <line hits="1" number="47"/>
		          <line hits="1" number="48"/>
		          <line hits="1" number="50"/>
		          <line hits="1" number="51"/>
		          <line hits="1" number="52"/>
		          <line hits="1" number="53"/>
		          <line hits="1" number="54"/>
		          <line hits="1" number="55"/>
		          <line hits="1" number="56"/>
		          <line hits="1" number="57"/>
		          <line hits="1" number="58"/>
		          <line hits="1" number="59"/>
		          <line hits="1" number="61"/>
		          <line hits="1" number="62"/>
		          <line hits="0" number="63"/>
		          <line hits="0" number="64"/>
		          <line hits="1" number="66"/>
		          <line hits="0" number="68"/>
		          <line hits="0" number="69"/>
		          <line hits="0" number="70"/>
		          <line hits="0" number="71"/>
		          <line hits="0" number="73"/>
		          <line hits="0" number="74"/>
		          <line hits="0" number="75"/>
		          <line hits="0" number="76"/>
		          <line hits="1" number="78"/>
		          <line hits="0" number="80"/>
		          <line hits="0" number="82"/>
		          <line hits="0" number="83"/>
		          <line hits="0" number="84"/>
		          <line hits="0" number="85"/>
		          <line hits="1" number="87"/>
		          <line hits="0" number="88"/>
		        </lines>
		      </class>
		    </classes>
		  </package>
		</packages>
		</coverage>
	`
	err := xml.Unmarshal([]byte(data), &c)
	if err != nil {
		fmt.Printf("error: %v", err)
		return
	}
	exp := []string{
		"src/collectors/0/docker_engine.py:2.0,2.50 1 1",
		"src/collectors/0/docker_engine.py:4.0,4.50 1 1",
		"src/collectors/0/docker_engine.py:5.0,5.50 1 1",
		"src/collectors/0/docker_engine.py:6.0,6.50 1 1",
		"src/collectors/0/docker_engine.py:7.0,7.50 1 1",
		"src/collectors/0/docker_engine.py:9.0,9.50 1 1",
		"src/collectors/0/docker_engine.py:11.0,11.50 1 1",
		"src/collectors/0/docker_engine.py:12.0,12.50 1 1",
		"src/collectors/0/docker_engine.py:13.0,13.50 1 1",
		"src/collectors/0/docker_engine.py:16.0,16.50 1 1",
		"src/collectors/0/docker_engine.py:17.0,17.50 1 1",
		"src/collectors/0/docker_engine.py:18.0,18.50 1 1",
		"src/collectors/0/docker_engine.py:19.0,19.50 1 1",
		"src/collectors/0/docker_engine.py:20.0,20.50 1 1",
		"src/collectors/0/docker_engine.py:21.0,21.50 1 1",
		"src/collectors/0/docker_engine.py:22.0,22.50 1 1",
		"src/collectors/0/docker_engine.py:24.0,24.50 1 1",
		"src/collectors/0/docker_engine.py:25.0,25.50 1 1",
		"src/collectors/0/docker_engine.py:27.0,27.50 1 1",
		"src/collectors/0/docker_engine.py:28.0,28.50 1 1",
		"src/collectors/0/docker_engine.py:30.0,30.50 1 1",
		"src/collectors/0/docker_engine.py:34.0,34.50 1 1",
		"src/collectors/0/docker_engine.py:35.0,35.50 1 1",
		"src/collectors/0/docker_engine.py:37.0,37.50 1 1",
		"src/collectors/0/docker_engine.py:38.0,38.50 1 1",
		"src/collectors/0/docker_engine.py:39.0,39.50 1 1",
		"src/collectors/0/docker_engine.py:45.0,45.50 1 1",
		"src/collectors/0/docker_engine.py:47.0,47.50 1 1",
		"src/collectors/0/docker_engine.py:48.0,48.50 1 1",
		"src/collectors/0/docker_engine.py:50.0,50.50 1 1",
		"src/collectors/0/docker_engine.py:51.0,51.50 1 1",
		"src/collectors/0/docker_engine.py:52.0,52.50 1 1",
		"src/collectors/0/docker_engine.py:53.0,53.50 1 1",
		"src/collectors/0/docker_engine.py:54.0,54.50 1 1",
		"src/collectors/0/docker_engine.py:55.0,55.50 1 1",
		"src/collectors/0/docker_engine.py:56.0,56.50 1 1",
		"src/collectors/0/docker_engine.py:57.0,57.50 1 1",
		"src/collectors/0/docker_engine.py:58.0,58.50 1 1",
		"src/collectors/0/docker_engine.py:59.0,59.50 1 1",
		"src/collectors/0/docker_engine.py:61.0,61.50 1 1",
		"src/collectors/0/docker_engine.py:62.0,62.50 1 1",
		"src/collectors/0/docker_engine.py:63.0,63.50 1 0",
		"src/collectors/0/docker_engine.py:64.0,64.50 1 0",
		"src/collectors/0/docker_engine.py:66.0,66.50 1 1",
		"src/collectors/0/docker_engine.py:68.0,68.50 1 0",
		"src/collectors/0/docker_engine.py:69.0,69.50 1 0",
		"src/collectors/0/docker_engine.py:70.0,70.50 1 0",
		"src/collectors/0/docker_engine.py:71.0,71.50 1 0",
		"src/collectors/0/docker_engine.py:73.0,73.50 1 0",
		"src/collectors/0/docker_engine.py:74.0,74.50 1 0",
		"src/collectors/0/docker_engine.py:75.0,75.50 1 0",
		"src/collectors/0/docker_engine.py:76.0,76.50 1 0",
		"src/collectors/0/docker_engine.py:78.0,78.50 1 1",
		"src/collectors/0/docker_engine.py:80.0,80.50 1 0",
		"src/collectors/0/docker_engine.py:82.0,82.50 1 0",
		"src/collectors/0/docker_engine.py:83.0,83.50 1 0",
		"src/collectors/0/docker_engine.py:84.0,84.50 1 0",
		"src/collectors/0/docker_engine.py:85.0,85.50 1 0",
		"src/collectors/0/docker_engine.py:87.0,87.50 1 1",
		"src/collectors/0/docker_engine.py:88.0,88.50 1 0"}
	got := GetLines(c)
	assert.Equal(t, exp, got)
}
